search KEY: **important command
	      images

commands: ###################################
SET /A seven=4+3 :  doing small math out put is 7
set : display all the variables defined for the current CMD session
set PATH=%PATH%C:\NewFolder; : following command to set the path variable by adding an item to the list (semicolon delimited)
setx PATH "%PATH%C:\NewFolder;" : following command to update the PATH variable for the current shell and save the setting across future logins: 
      				Generally, the setx command should only be used when permanently altering the environment variable is desired. 
			        setx command operates off the current user, rather than system environment variables by default. To learn more about this command, run setx /?.

set /a total=total+1 : makes total = 1
set /a total+=1 : adds 1 to  total making in 2
if statement commands: ###############
if not exist "C:\NewFolder\NULL" mkdir "C:\NewFolder" : if does not exits will make 
for loop commands: ####################
for %variable IN (set) DO command [command-parameters] : basic syntax
for /l %%variable in (start,step,end) do (command) : basic Stepping through a series of values:
for /l %%A in (0,2,10) do echo %%A : Stepping through a series of values example
for %%variable in (fileSet) do (command) : basic Looping through files
for %%B in (%USERPROFILE%\Desktop\*) do echo %%B : Looping through files example
for /d %%variable in (directorySet) do (command) : basic Looping through directories
for /d %%C in (%PUBLIC%\* %USERPROFILE%\*) do echo %%C : Looping through directories example
**important command : for /r "%USERPROFILE%" %%D in (*) do echo %%D : Looping through directories, recursively: **
**important command : for /r "%USERPROFILE%" %%D in (*.bat) do echo %%D : Looping through directories, recursively: **
for /f ["options"] %%variable in (source) do (command) : basic Parsing File Content and Output
@echo off
for /f "tokens=1-4" %%A in (hosts.txt) do ( echo host: %%A IP Address: %%B Department: %%C Email: %%D) : Parsing File Content and Output example
Gather System Information commands: ##############
note pad plugin: (one)
host_baseline.bat cda-win-hunt_baseline.txt : will output to file from  (one)
dir host* : check for host
host_baseline_autodelete.bat cda-win-hunt_baseline2.txt : ran will give systeminfo then auto delte itself
dir host* :  verifgfy that it deleted it self
powershell commands: ################
Get-Help New-Item :  Get-Help cmdlet to retrieve the syntax for the New-Item cmdlet
Get-Help New-Item -full : more verbose listing (-full)
Get-Help New-Item -examples : can show examples (-examples). The examples are included in the -full output.
New-Item -Path 'C:\users\trainee\temp' -ItemType Directory : creates new directory "temp"
Copy-Item 'C:\users\trainee\temp' 'C:\users\trainee\temp2' : Copy-Item cmdlet is used to copy a directory by passing the path of the directory to be copied and destination path where the folder is to be copied.
Remove-Item 'C:\users\trainee\temp2' : removes specified directory
Move-Item 'C:\users\trainee\temp' 'c:\users\trainee\old_temp' : moves item from one place to another will create directory if not already exist
Rename-Item 'C:\users\trainee\old_temp' 'c:\users\trainee\new_temp' : rename item to
 Test-Path 'C:\users\trainee\test' : will give true or fales if the directory / folder exist fales does not exsit if true is does
Test-Path 'C:\users\trainee\new_temp' : true
dir : check direcoty listing same as "get-childitem"
powershell scripts: ########################
Get-ExecutionPolicy :  policy that restricts script execution. A user can check this policy by running the
Get-Process : Shows the processes currently running on the computer
Get-Service : Shows the list of services with their status
Get-Content : Shows the content of the file specified
Get-Help : cmdlet to view the help for all available cmdlets:
Parameters : ####################
Get-Service -Name W* : shows all services whose names start with W:
Get-Process | Get-Member :  Get-Member command is used to display the parameters for a specific cmdlet (in this example for the Get-Process cmdlet):
Get-Help Get-Process -Examples : user can make sure the help is current and get examples for a cmdlet (such as Get-Process)
Start-Process notepad : opens notepad
Stop-Process [noteopad/PID]: stop process base of name or PID
pipelines: ###################
Command-1 | Command-2 | Command-3 : example of piping commands
Get-Process notepad | Stop-Process : get process notepoad and then stops it
Get-Service termservice | Start-Service : gets the service termservice and then starts it
Get-Process | Sort-Object -Property handles : gets list of process and sortys by property handles
Get-Help Start-Service -Full : determine which of the parameters of the Start-Service cmdlet accepts pipeline input,
et-Help Start-Service -Parameter * : all serices listed by paramaters
Scripting in PowerShell: #######################
Stop-Process -ProcessName chrome : stops google chrome
ForEach-Object : performs an operation on each item in a collection of input objects
 Where-Object : provides finer control over the specific properties to filter on and is used in pipelines to specify specific objects to perform actions on.


#########









